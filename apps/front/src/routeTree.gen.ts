/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PlayerLayoutImport } from './routes/player/_layout'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authCreateIndexImport } from './routes/(auth)/create/index'
import { Route as PlayerLayoutHomeImport } from './routes/player/_layout/home'
import { Route as authCreatePlayerImport } from './routes/(auth)/create/player'
import { Route as PlayerLayoutProfileIndexImport } from './routes/player/_layout/profile/index'
import { Route as PlayerLayoutProfileEditImport } from './routes/player/_layout/profile/edit'

// Create Virtual Routes

const PlayerImport = createFileRoute('/player')()

// Create/Update Routes

const PlayerRoute = PlayerImport.update({
  path: '/player',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlayerLayoutRoute = PlayerLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => PlayerRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authCreateIndexRoute = authCreateIndexImport.update({
  path: '/create/',
  getParentRoute: () => rootRoute,
} as any)

const PlayerLayoutHomeRoute = PlayerLayoutHomeImport.update({
  path: '/home',
  getParentRoute: () => PlayerLayoutRoute,
} as any)

const authCreatePlayerRoute = authCreatePlayerImport.update({
  path: '/create/player',
  getParentRoute: () => rootRoute,
} as any)

const PlayerLayoutProfileIndexRoute = PlayerLayoutProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => PlayerLayoutRoute,
} as any)

const PlayerLayoutProfileEditRoute = PlayerLayoutProfileEditImport.update({
  path: '/profile/edit',
  getParentRoute: () => PlayerLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof rootRoute
    }
    '/player': {
      id: '/player'
      path: '/player'
      fullPath: '/player'
      preLoaderRoute: typeof PlayerImport
      parentRoute: typeof rootRoute
    }
    '/player/_layout': {
      id: '/player/_layout'
      path: '/player'
      fullPath: '/player'
      preLoaderRoute: typeof PlayerLayoutImport
      parentRoute: typeof PlayerRoute
    }
    '/(auth)/create/player': {
      id: '/create/player'
      path: '/create/player'
      fullPath: '/create/player'
      preLoaderRoute: typeof authCreatePlayerImport
      parentRoute: typeof rootRoute
    }
    '/player/_layout/home': {
      id: '/player/_layout/home'
      path: '/home'
      fullPath: '/player/home'
      preLoaderRoute: typeof PlayerLayoutHomeImport
      parentRoute: typeof PlayerLayoutImport
    }
    '/(auth)/create/': {
      id: '/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof authCreateIndexImport
      parentRoute: typeof rootRoute
    }
    '/player/_layout/profile/edit': {
      id: '/player/_layout/profile/edit'
      path: '/profile/edit'
      fullPath: '/player/profile/edit'
      preLoaderRoute: typeof PlayerLayoutProfileEditImport
      parentRoute: typeof PlayerLayoutImport
    }
    '/player/_layout/profile/': {
      id: '/player/_layout/profile/'
      path: '/profile'
      fullPath: '/player/profile'
      preLoaderRoute: typeof PlayerLayoutProfileIndexImport
      parentRoute: typeof PlayerLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  authLoginRoute,
  authSignupRoute,
  PlayerRoute: PlayerRoute.addChildren({
    PlayerLayoutRoute: PlayerLayoutRoute.addChildren({
      PlayerLayoutHomeRoute,
      PlayerLayoutProfileEditRoute,
      PlayerLayoutProfileIndexRoute,
    }),
  }),
  authCreatePlayerRoute,
  authCreateIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/player",
        "/create/player",
        "/create/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/signup": {
      "filePath": "(auth)/signup.tsx"
    },
    "/player": {
      "filePath": "player",
      "children": [
        "/player/_layout"
      ]
    },
    "/player/_layout": {
      "filePath": "player/_layout.tsx",
      "parent": "/player",
      "children": [
        "/player/_layout/home",
        "/player/_layout/profile/edit",
        "/player/_layout/profile/"
      ]
    },
    "/create/player": {
      "filePath": "(auth)/create/player.tsx"
    },
    "/player/_layout/home": {
      "filePath": "player/_layout/home.tsx",
      "parent": "/player/_layout"
    },
    "/create/": {
      "filePath": "(auth)/create/index.tsx"
    },
    "/player/_layout/profile/edit": {
      "filePath": "player/_layout/profile/edit.tsx",
      "parent": "/player/_layout"
    },
    "/player/_layout/profile/": {
      "filePath": "player/_layout/profile/index.tsx",
      "parent": "/player/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
